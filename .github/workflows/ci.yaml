name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    name: Check linting and formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read Python version from .python-version
        id: get-python-version
        run: |
          PYTHON_VERSION=$(cat .python-version)
          echo "python-version=$PYTHON_VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.get-python-version.outputs.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies using uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install ruff pydoclint

      - name: Ruff - Lint check
        run: |
          source .venv/bin/activate
          echo "Running ruff check..."
          ruff check .
        env:
          RUFF_CONFIG: pyproject.toml

      - name: Ruff - Format check
        run: |
          source .venv/bin/activate
          echo "Checking code formatting..."
          ruff format --check .
        env:
          RUFF_CONFIG: pyproject.toml

      - name: Pydoclint - Docstring lint
        run: |
          source .venv/bin/activate
          echo "Running pydoclint..."
          pydoclint .
  test:
    name: Check all tests pass
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Read Python version from .python-version
      id: get-python-version
      run: |
        PYTHON_VERSION=$(cat .python-version)
        echo "python-version=$PYTHON_VERSION" >> "$GITHUB_OUTPUT"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ steps.get-python-version.outputs.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies using uv
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install pytest pytest-cov

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        echo "Running pytest..."
        uv run pytest . --cov=com --cov-report=xml --cov-report=html